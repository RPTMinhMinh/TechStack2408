Array

-	là cấu trúc dữ liệu trong js
-	có thể chứa đc nhiều kiểu dữ liệu khác bên trong nó
-	sử dụng để lưu trữ danh sách dữ liệu
-	mỗi phần tử trong array đều đc đánh số (index) ( bắt đầu từ 0 )
-	chứa các gtri khác nhau, gồm số, chuỗi, đối tượng, và cả mảng khác


Array hay sử dụng cho các bài toán liên quan đến danh sách, tập hợp
VD:
-	dãy số bất kỳ -> tìm số lớn nhất, sắp xếp tăng dần
-	dsach điểm thi cuối kì -> tính điểm trung bình
-	...

KHAI BÁO VÀ KHỞI TẠO:

cách 1:
	const arr1 = [];
	const arr2 = [element1, element2,...,elementN];
cách 2:
	const arr3 = new Array();
	const arr4 = new Array(element1, element2, ..., elementN);

=> Lưu ý: độ dài của mảng - 1 = index cuối cùng của mảng đó

CÁC THAO TÁC HAY GẶP TRÊN Array

-	truy xuất và thay đổi giá trị của 1 phần tử
-	duyệt mảng
-	thêm/xóa phần tử trong mảng
-	tìm kiếm/lọc/biến đổi

-	truy xuất:
		<tên mảng>[<chỉ số phần tử>]
-	thay đổi giá trị:
		<tên mảng>[<chỉ số phần tử>] = <giá trị mới>
-	duyệt mảng:
		là tiền đề để xử lý các bài toán tìm kiếm, lọc, biến đổi
		với những bài toán cần quan tâm đến index -> dùng for index
		với những bài toán không cần quan tâm đến index -> dùng for of

		const fruits = ['Apple', 'Banana', 'Orange'];

		Dùng vòng lặp này khi cần sử dụng index
		console.log('Duyet mang vowi for bth')

		for (let i = 0; i < fruits.length; i++) {
			console.log(fruits[i]);
		}

		console.log('Duyet mang vowi for of')
		Dùng vòng lặp này khi không quan tâm đến index
		for (const fruit of fruits) {
			console.log(fruit);
		}
-	thêm, xóa các phần tử trong mảng:
		push: thêm 1 or nhiều phần tử vào CUỐI mảng
			<tên mảng>.push(<ptu1>, ..., <ptuN>)
		unshift: thêm một or nhiều phần tử vào ĐẦU mảng
			<tên mảng>.unshift(<ptu1>, ..., <ptuN>)
		pop: xóa phần tử ở CUỐI mảng:
			<tên mảng>.pop()
		shift: xóa phần tử ở ĐẦU mảng:
			<tên mảng>.shift()
		splice: thao tác bất khì (thêm, xóa một or nhiều phần tử)
			XÓA:
			<tên mảng>.splice(index, countDelete, <ptu1>,... , <ptuN>)
			VD:
				a = [10,20,30,40]
				
				a.splice(2, 1)
				a = [10,20,40]
				
				a.splice(2, 2)
				a = [10,20]
				
				a.splice(2, 0)
				a = [10,20,30,40]
			
			THÊM:
			<tên mảng>.splice(index, 0, <ptu1>,... , <ptuN>)
			VD:
				a = [10,20,30,40]
				
				a.splice(2, 0, 25,26)
				a = [10,20,25,26,30,40]
-	includes: Phương thức includes() trong JavaScript được sử dụng để kiểm tra xem một mảng có chứa một giá trị cụ thể hay không. Nếu giá trị đó có trong mảng, phương thức sẽ trả về true, ngược lại sẽ trả về false.
		array.includes(value, fromIndex)
		VD: 
			const arr = [10, 4, -7, 9, 100];

			console.log(arr.includes(9));      // true
			console.log(arr.includes(5));      // false
			console.log(arr.includes(100, 2)); // true (tìm từ chỉ số 2)
		=> dùng để so sánh chuỗi (string) trong js có bằng nhau không

	NẾU NHẬP MỘT CHUỖI (STRING) VÀ MUỐN TÁCH ĐỂ ĐẨY VÀO MẢNG (ARRAY) VÀ NGƯỢC LẠI

-	split và join:
		split: Phương thức split() được sử dụng để chia một chuỗi thành một mảng các phần tử, dựa trên một ký tự phân tách (delimiter).
				string.split(separator, limit)
			separator: Ký tự hoặc chuỗi dùng để chia chuỗi. Nếu không chỉ định, toàn bộ chuỗi sẽ được đưa vào mảng.
			limit (tùy chọn): Số lượng tối đa các phần tử trong mảng trả về.
			VD:
				const str = "Hello, world, how, are, you";
				const arr = str.split(", "); 				// Chia theo dấu phẩy và khoảng trắng
				console.log(arr); // ['Hello', 'world', 'how', 'are', 'you']

		join: Phương thức join() được sử dụng để nối các phần tử của một mảng thành một chuỗi, sử dụng một ký tự phân tách (delimiter) chỉ định.
				array.join(separator)
			VD: 
				const arr = ['Hello', 'world', 'how', 'are', 'you'];
				const str = arr.join(", "); 				// Nối các phần tử với dấu phẩy và khoảng trắng
				console.log(str); // "Hello, world, how, are, you"
		=> 	split() chuyển đổi một chuỗi thành mảng.
			join() chuyển đổi một mảng thành chuỗi.




